version: "3.7"
services:
  nginx:
    image: nginx:1.17
    volumes:
      - "./public:/srv/app/public:ro"
      - "./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf:ro"
    restart: unless-stopped
    ports:
      - "${DOCKER_PORT_HTTP:-8080}:80"
    networks:
      - default
  fpm:
    build:
      context: .
      target: fpm
      args:
        USER: "${DOCKER_UID:-1000}"
        BUILD_ENV: "${BUILD_ENV:-dev}"
    environment:
      - APP_ENV=${APP_ENV:-dev}
      - PHP_XDEBUG_ENABLED=${PHP_XDEBUG_ENABLED:-0}
      - PHP_XDEBUG_PORT=${PHP_XDEBUG_PORT:-9001}
      - PHP_XDEBUG_REMOTE_HOST=${PHP_XDEBUG_REMOTE_HOST:-172.17.0.1}
      - PHP_IDE_CONFIG=serverName=docker-fpm
      - XDEBUG_CONFIG=idekey=docker-fpm
    volumes:
      - "./:/srv/app:rw"
    user: "${DOCKER_UID:-1000}"
    restart: unless-stopped
    depends_on:
      database: { condition: service_healthy }
    networks:
      - default
  php:
    build:
      context: .
      target: php
      args:
        USER: "${DOCKER_UID:-1000}"
        BUILD_ENV: "${BUILD_ENV:-dev}"
    environment:
      - APP_ENV=${APP_ENV:-dev}
      - PHP_XDEBUG_ENABLED=${PHP_XDEBUG_ENABLED:-0}
      - PHP_XDEBUG_PORT=${PHP_XDEBUG_PORT:-9001}
      - PHP_XDEBUG_REMOTE_HOST=${PHP_XDEBUG_REMOTE_HOST:-172.17.0.1}
      - PHP_IDE_CONFIG=serverName=docker-php
      - XDEBUG_CONFIG=idekey=docker-php
    volumes:
      - "./:/srv/app:rw"
    user: "${DOCKER_UID:-1000}"
    restart: "no"
    init: true
    scale: 0
    depends_on:
      database: { condition: service_healthy }
    networks:
      - default
  database:
    image: postgres:13
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-docker}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-docker}
    restart: unless-stopped
    healthcheck:
      test:
        [
          "CMD",
          "psql",
          "--username=${POSTGRES_USER:-docker}",
          "--no-password",
          "-c",
          '\l',
        ]
      start_period: 20s
      interval: 1s
      retries: 10
    volumes:
      - "dbdata:/var/lib/postgresql/data"
    ports:
      - "${DOCKER_PORT_POSTGRES:-5432}:5432"
    networks:
      - default
  composer:
    build:
      context: .
      target: composer
      args:
        BUILD_ENV: "${BUILD_ENV:-dev}"
    working_dir: /srv/app
    volumes:
      - "./:/srv/app:rw"
      - "${COMPOSER_HOME:-~/.composer}:/tmp"
    user: "${DOCKER_UID:-1000}"
    restart: "no"
    scale: 0
networks:
  default: ~
volumes:
  dbdata: ~
